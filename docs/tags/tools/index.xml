<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Tools on Noodle Eater</title>
    <link>http://localhost:1313/tags/tools/</link>
    <description>Recent content in Tools on Noodle Eater</description>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Mon, 15 Aug 2022 17:00:32 +0700</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Unity UI Binding Tools</title>
      <link>http://localhost:1313/posts/ui-binding-unity/</link>
      <pubDate>Mon, 15 Aug 2022 17:00:32 +0700</pubDate>
      <guid>http://localhost:1313/posts/ui-binding-unity/</guid>
      <description>&lt;h2 id=&#34;intro&#34;&gt;Intro&lt;/h2&gt;
&lt;p&gt;I’ve been using unreal for sometimes and it’s a pretty amazing engine. I found that they have &lt;code&gt;UPROPERTY(meta=(BindWidget))&lt;/code&gt; to binding UI variable declaration in the C++ code and the Widget.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cpp&#34; data-lang=&#34;cpp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;UPROPERTY(meta&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(BindWidget))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;UTextBlock&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; TextBlock_PlayerName;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Unreal will bind that variable into the UI component that has the same type and name. And lately, I also see that Godot has its own binding, and they improve it in Godot 3.5. But, I do not find Unity built-in UI binding. I did not check the UI Toolkit yet or any other frameworks. So I decide to make my own binding inspired by Unreal.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
